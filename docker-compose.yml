version: '3.8'

services:
  # Service MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql-container1
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-Micro_ClientDB}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-root}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  # Service Consul
  consul:
    image: consul:1.15.4
    container_name: consul-container
    ports:
      - "8500:8500"
    volumes:
      - consul_data:/consul/data
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    networks:
      - microservices-network

  # Service Gateway
  gateway-service:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      consul:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    networks:
      - microservices-network
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  # Service Client
  client-service:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    depends_on:
      mysql:
        condition: service_healthy
      consul:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/Micro_ClientDB?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-root}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-root}
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    networks:
      - microservices-network
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  # Service Voiture
  car-service:
    build:
      context: ./car
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    depends_on:
      mysql:
        condition: service_healthy
      consul:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/Micro_VoitureDB?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-root}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-root}
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    networks:
      - microservices-network
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  # Service phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    ports:
      - "8081:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - microservices-network

volumes:
  mysql_data:
  consul_data:

# Network Definition
networks:
  microservices-network:
    driver: bridge